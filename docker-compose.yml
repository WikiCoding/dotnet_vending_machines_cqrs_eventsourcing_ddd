services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
      - "27018:27018"
      - "27019:27019"
    environment:
      MONGO_INITDB_DATABASE: vending_machines
    command: ["--replSet", "rs0", "--bind_ip_all"] ## So I have support for transactions!

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongouser
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopass
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
      ME_CONFIG_BASICAUTH: false

  mongo-init-replica:
    image: mongo:latest
    depends_on:
      - mongodb
    entrypoint: >
      bash -c '
      sleep 10 &&
      until mongosh --host mongodb --eval "print(\"waiting for connection\")"; do sleep 1; done &&
      mongosh --host mongodb --eval "
        rs.initiate({
          _id: \"rs0\",
          members: [{ _id: 0, host: \"host.docker.internal:27017\" }]
        })
      " &&
      mongosh --host mongodb --eval "
        db = db.getSiblingDB(\"vending_machines\");
        db.createCollection(\"machines\");
      " &&
      mongosh --host mongodb --eval "
        db = db.getSiblingDB(\"vending_machines\");
        db.createCollection(\"outbox\");
      "
      '

  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=vending_machines
    ports:
      - "5555:5432"

  adminer:
    image: adminer:latest
    ports:
      - "8082:8080"
    depends_on:
      - postgres

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.70:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080"

  kafka-init:
    image: confluentinc/cp-kafka
    container_name: kafka-init
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      echo 'Waiting for Kafka to be ready...';
      while ! nc -z kafka 9092; do sleep 1; done;
      echo 'Creating topic machines-topic...';
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic machines-topic --partitions 1 --replication-factor 1;
      echo 'Topic created.';
      "
