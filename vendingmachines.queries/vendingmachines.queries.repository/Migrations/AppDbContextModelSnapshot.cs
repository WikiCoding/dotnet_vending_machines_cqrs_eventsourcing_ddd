// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vendingmachines.queries.repository;

#nullable disable

namespace vendingmachines.queries.repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("vendingmachines.queries.entities.Machine", b =>
                {
                    b.Property<string>("MachineId")
                        .HasColumnType("text")
                        .HasColumnName("machineid");

                    b.Property<string>("MachineType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("machinetype");

                    b.HasKey("MachineId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("vendingmachines.queries.entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("MachineId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductQty")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("MachineId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("vendingmachines.queries.entities.Product", b =>
                {
                    b.HasOne("vendingmachines.queries.entities.Machine", null)
                        .WithMany("Products")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("vendingmachines.queries.entities.Machine", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
